<Example>
    <Name>
        RTC_Tamper_Example
    </Name>
    <Description>
     This example shows how to write/read data to/from RTC Backup data registers and 
demonstrates the Tamper detection feature.

One from the following clock can be used as RTC clock source (uncomment the
corresponding define in main.c):
  - LSE oscillator clock usually delivered by a 32.768 kHz quartz.
  - LSI oscillator clock

The associated firmware performs the following:
1. It configures the Tamper pin to be falling edge, and enables the Tamper 
   interrupt.
2. It writes the data to all RTC Backup data registers, then check whether the 
   data were correctly written. If yes, LED1 turns on, otherwise LED3 turns on.
3. On applying a low level on the RTC_AF2 pin, the RTC backup data registers
   are reset and the Tamper interrupt is generated. The corresponding ISR then checks
   whether the RTC Backup data registers are cleared. If yes LED2 turns ON,
   otherwise LED4 turns ON.
    </Description>
    <Version>
        1.0.0
    </Version>
    <Tags>
        RTC_Tamper
    </Tags>
    <EVKit>
        STM32303C-EVAL Evaluation Board
    </EVKit>
    <Files>
        <File>
            $REPO_ROOT$\ST\STM32F30X\cmsis_lib\RTC\example\RTC_Tamper\src\RTC_Tamper_Example.c
        </File>
    </Files>
    <Dependencys>
        <Dependency>GPIO,RCC,NVIC,PWR,EXTI</Dependency>
    </Dependencys>
</Example>


