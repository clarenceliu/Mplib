<Example>
    <Name>
        WWDT_Example
    </Name>
    <Description>
      This example shows how to update at regular period the WWDG counter and how to
simulate a software fault generating an MCU WWDG reset on expiry of a programmed 
time period.

The WWDG timeout is set to 58.2 ms and the refresh window is set to 80. 
The WWDG counter is refreshed each 43ms in the main program infinite loop to 
prevent a WWDG reset.
LED2 is also toggled each 43 ms indicating that the program is running.

An EXTI Line is connected to a GPIO pin, and configured to generate an interrupt
on the rising edge of the signal.

The EXTI Line is used to simulate a software failure: once the EXTI Line event 
occurs, by pressing the Key push-button, the corresponding interrupt is served.
In the ISR, a write to invalid address generates a Hardfault exception containing
an infinite loop and preventing to return to main program (the WWDG counter is 
not refreshed).
As a result, when the WWDG counter falls to 43, the WWDG reset occurs.
If the WWDG reset is generated, after the system resumes from reset, LED1 turns on.

If the EXTI Line event does not occur, the WWDG counter is indefinitely refreshed
in the main program infinite loop, and there is no WWDG reset. 
    </Description>
    <Version>
        1.0.0
    </Version>
    <Tags>
        WWDT
    </Tags>
    <EVKit>
        STM32303C-EVAL Evaluation Board
    </EVKit>
    <Files>
        <File>
            $REPO_ROOT$\ST\STM32F30X\cmsis_lib\WWDT\example\WWDT_Example\src\WWDT_Example.c
        </File>
    </Files>
    <Dependencys>
        <Dependency>RCC,NVIC,EXTI,GPIO</Dependency>
    </Dependencys>
</Example>


